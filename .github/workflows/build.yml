name: LLM | Build → Push(Docker Hub) → (artifact) → Notify infra

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  SERVICE: llm
  IMAGE_NAME: carnav-llm
  DOCKERHUB_NAMESPACE: gabicate
  FULL_IMAGE: docker.io/${{ env.DOCKERHUB_NAMESPACE }}/${{ env.IMAGE_NAME }}
  INFRA_REPO: gabriella0128/career-navigator-infra

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set TAG
        id: meta
        run: echo "TAG=main-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # 1) Docker Hub 로그인 (Secrets 필요)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 2) 빌드 & 푸시 (두 태그 동시 푸시: 고정 v1 + 커밋태그)
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.FULL_IMAGE }}:v1
            ${{ env.FULL_IMAGE }}:${{ steps.meta.outputs.TAG }}

      # (선택) TAR 아티팩트도 계속 쓰고 싶다면 유지
      - name: Save image as TAR (optional)
        run: |
          mkdir -p /tmp/carnav
          docker pull ${{ env.FULL_IMAGE }}:${{ steps.meta.outputs.TAG }}
          docker save -o /tmp/carnav/${{ env.SERVICE }}-${{ steps.meta.outputs.TAG }}.tar \
            ${{ env.FULL_IMAGE }}:${{ steps.meta.outputs.TAG }}

      - name: Upload artifact (optional)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SERVICE }}-image-${{ steps.meta.outputs.TAG }}
          path: /tmp/carnav/${{ env.SERVICE }}-${{ steps.meta.outputs.TAG }}.tar
          retention-days: 7

      # 3) 인프라 레포에 배포 트리거(풀 경로/태그 전달)
      - name: Notify infra (repository_dispatch)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: peter-evans/repository-dispatch@v3
        with:
          token:      ${{ secrets.INFRA_REPO_TOKEN }}
          repository: ${{ env.INFRA_REPO }}
          event-type: deploy
          client-payload: |
            {
              "service": "llm",
              "tag": "${{ steps.meta.outputs.TAG }}",
              "repo": "${{ github.repository }}",
              "run_id": "${{ github.run_id }}",
              "artifact_name": "llm-image-${{ steps.meta.outputs.TAG }}",
              "image_name": "carnav-llm",
              "full_image": "${{ env.FULL_IMAGE }}"
            }
